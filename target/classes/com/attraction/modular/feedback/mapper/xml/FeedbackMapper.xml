<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.attraction.modular.feedback.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.attraction.modular.feedback.entity.Feedback" >
    <id column="feedback_id" property="feedbackId" jdbcType="INTEGER" />
    <result column="feedback_title" property="feedbackTitle" jdbcType="VARCHAR" />
    <result column="feedback_content" property="feedbackContent" jdbcType="VARCHAR" />
    <result column="feedback_pictures" property="feedbackPictures" jdbcType="VARCHAR" />
    <result column="Feedback_done" property="feedbackDone" jdbcType="INTEGER" />
    <result column="Feedback_push_time" property="feedbackPushTime" jdbcType="VARCHAR" />
    <result column="Feedback_done_time" property="feedbackDoneTime" jdbcType="VARCHAR" />
    <result column="Feedback_active_man" property="feedbackActiveMan" jdbcType="INTEGER" />
    <result column="feedback_push_man" property="feedbackPushMan" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="getFeedbackStatusMap" type="com.attraction.modular.feedback.entity.Feedback" >
    <id column="feedback_status_id" property="feedbackId" jdbcType="INTEGER" />
    <result column="feedback_status_name" property="feedbackPictures" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="EchartPieMap" type="com.attraction.common.entity.EchartPieResult">
    <result column="name" property="name" />
    <result column="value" property="value" />
  </resultMap>



  <sql id="Base_Column_List" >
    feedback_id, feedback_title, feedback_content, feedback_pictures, Feedback_done, 
    Feedback_push_time, Feedback_done_time, Feedback_active_man, feedback_push_man
  </sql>
  <sql id="getFeedbackStatusSql" >
    feedback_status_id, feedback_status_name
  </sql>



  <select id="countAllFeedback" resultType="map">
    SELECT count(feedback_id) 'allFeedback'
    FROM feedback_log_tab
  </select>
  <select id="countFeedbackOnlyToday" resultType="map">
    SELECT count(feedback_id) 'allFeedbackToday'
    FROM feedback_log_tab
    WHERE feedback_push_time &gt; #{today}
  </select>
  <select id="countNotDoneFeedbackOnlyToday" resultType="map">
    SELECT count(feedback_id) 'notDoneFeedbackToday'
    FROM feedback_log_tab
    WHERE feedback_done != 2 and feedback_push_time &gt; #{today}
  </select>
  <select id="countNotDoneFeedback" resultType="map">
    SELECT count(feedback_id) 'notDoneFeedback'
    FROM feedback_log_tab
    WHERE feedback_done != 2
  </select>
  <select id="getTheFeedbackList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from feedback_log_tab
    <where>
      <if test=" userId != null ">
        AND feedback_push_man = #{userId}
      </if>
      <if test="statusId != null">
        AND Feedback_done = #{statusId}
      </if>
    </where>
    ORDER BY feedback_id DESC
    <if test="startRow != null and rows != null">
      limit ${startRow},${rows}
    </if>

  </select>
  <select id="getFeedbackStatus" resultMap="getFeedbackStatusMap">
      SELECT
      <include refid="getFeedbackStatusSql" />
      from feedback_status
  </select>
  <select id="countFeedbackGroupByStatusLastWeek" resultMap="EchartPieMap">
    select case Feedback_done
      WHEN 0 then '未处理'
      when 1 then '处理中'
      WHEN 2 then '已处理'
      WHEN 3 then '技术人员最终回复'
      when 4 then '工作人员最终回复'
      else 'unknow' end as 'name'
    ,count(feedback_id) as 'value'
    from feedback_log_tab
    WHERE Feedback_push_time BETWEEN #{startDay} and #{endDay}
    GROUP BY Feedback_done
  </select>
  <select id="getCountFeedbackByDay" resultType="Integer">
    select COUNT(feedback_id)
    from feedback_log_tab
    where Feedback_push_time &gt; #{startDay} AND
    Feedback_push_time &lt; #{endDay}
  </select>
  <update id="updatePushMan">
    update feedback_log_tab
    set feedback_push_man = 1
    where feedback_push_man = #{userId}
  </update>
  <update id="updateActiveMan">
    update feedback_log_tab
    set feedback_active_man = 1
    where feedback_active_man = #{userId}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedback_log_tab
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feedback_log_tab
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.attraction.modular.feedback.entity.Feedback" >
    insert into feedback_log_tab (feedback_id, feedback_title, feedback_content, 
      feedback_pictures, Feedback_done, Feedback_push_time, 
      Feedback_done_time, Feedback_active_man, feedback_push_man
      )
    values (#{feedbackId,jdbcType=INTEGER}, #{feedbackTitle,jdbcType=VARCHAR}, #{feedbackContent,jdbcType=VARCHAR}, 
      #{feedbackPictures,jdbcType=VARCHAR}, #{feedbackDone,jdbcType=INTEGER}, #{feedbackPushTime,jdbcType=VARCHAR},
      #{feedbackDoneTime,jdbcType=VARCHAR}, #{feedbackActiveMan,jdbcType=INTEGER}, #{feedbackPushMan,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.attraction.modular.feedback.entity.Feedback" >
    insert into feedback_log_tab
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="feedbackId != null" >
        feedback_id,
      </if>
      <if test="feedbackTitle != null" >
        feedback_title,
      </if>
      <if test="feedbackContent != null" >
        feedback_content,
      </if>
      <if test="feedbackPictures != null" >
        feedback_pictures,
      </if>
      <if test="feedbackDone != null" >
        Feedback_done,
      </if>
      <if test="feedbackPushTime != null" >
        Feedback_push_time,
      </if>
      <if test="feedbackDoneTime != null" >
        Feedback_done_time,
      </if>
      <if test="feedbackActiveMan != null" >
        Feedback_active_man,
      </if>
      <if test="feedbackPushMan != null" >
        feedback_push_man,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="feedbackId != null" >
        #{feedbackId,jdbcType=INTEGER},
      </if>
      <if test="feedbackTitle != null" >
        #{feedbackTitle,jdbcType=VARCHAR},
      </if>
      <if test="feedbackContent != null" >
        #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="feedbackPictures != null" >
        #{feedbackPictures,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDone != null" >
        #{feedbackDone,jdbcType=INTEGER},
      </if>
      <if test="feedbackPushTime != null" >
        #{feedbackPushTime},
      </if>
      <if test="feedbackDoneTime != null" >
        #{feedbackDoneTime},
      </if>
      <if test="feedbackActiveMan != null" >
        #{feedbackActiveMan,jdbcType=INTEGER},
      </if>
      <if test="feedbackPushMan != null" >
        #{feedbackPushMan,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.attraction.modular.feedback.entity.Feedback" >
    update feedback_log_tab
    <set >
      <if test="feedbackTitle != null" >
        feedback_title = #{feedbackTitle,jdbcType=VARCHAR},
      </if>
      <if test="feedbackContent != null" >
        feedback_content = #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="feedbackPictures != null" >
        feedback_pictures = #{feedbackPictures,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDone != null" >
        Feedback_done = #{feedbackDone,jdbcType=INTEGER},
      </if>
      <if test="feedbackPushTime != null" >
        Feedback_push_time = #{feedbackPushTime},
      </if>
      <if test="feedbackDoneTime != null" >
        Feedback_done_time = #{feedbackDoneTime},
      </if>
      <if test="feedbackActiveMan != null" >
        Feedback_active_man = #{feedbackActiveMan,jdbcType=INTEGER},
      </if>
      <if test="feedbackPushMan != null" >
        feedback_push_man = #{feedbackPushMan,jdbcType=INTEGER},
      </if>
    </set>
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.attraction.modular.feedback.entity.Feedback" >
    update feedback_log_tab
    set feedback_title = #{feedbackTitle,jdbcType=VARCHAR},
      feedback_content = #{feedbackContent,jdbcType=VARCHAR},
      feedback_pictures = #{feedbackPictures,jdbcType=VARCHAR},
      Feedback_done = #{feedbackDone,jdbcType=INTEGER},
      Feedback_push_time = #{feedbackPushTime},
      Feedback_done_time = #{feedbackDoneTime},
      Feedback_active_man = #{feedbackActiveMan,jdbcType=INTEGER},
      feedback_push_man = #{feedbackPushMan,jdbcType=INTEGER}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
</mapper>