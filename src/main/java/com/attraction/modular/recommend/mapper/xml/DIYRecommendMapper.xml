<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.attraction.modular.recommend.mapper.DIYRecommendMapper">
    <resultMap id="BaseResultMap" type="com.attraction.modular.recommend.entity.Recommend">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="attraction_id" property="attractionId" jdbcType="INTEGER"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="record_time" property="recordTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, member_id, attraction_id, score, type, record_time
  </sql>
    <insert id="insertBatch" parameterType="com.attraction.modular.recommend.entity.Recommend">
        <foreach collection="list" item="recommend" separator=";">
        insert into recommend_tab
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recommend.id != null">
                id,
            </if>
            <if test="recommend.memberId != null">
                member_id,
            </if>
            <if test="recommend.attractionId != null">
                attraction_id,
            </if>
            <if test="recommend.score != null">
                score,
            </if>
            <if test="recommend.type != null">
                type,
            </if>
            <if test="recommend.recordTime != null">
                record_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recommend.id != null">
                #{recommend.id,jdbcType=INTEGER},
            </if>
            <if test="recommend.memberId != null">
                #{recommend.memberId,jdbcType=INTEGER},
            </if>
            <if test="recommend.attractionId != null">
                #{recommend.attractionId,jdbcType=INTEGER},
            </if>
            <if test="recommend.score != null">
                #{recommend.score,jdbcType=INTEGER},
            </if>
            <if test="recommend.type != null">
                #{recommend.type,jdbcType=INTEGER},
            </if>
            <if test="recommend.recordTime != null">
                #{recommend.recordTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        </foreach>
    </insert>
    <update id="updateBatch">
        <foreach collection="list" item="recommend" separator=";">
            update recommend_tab
            <set>
                <if test="recommend.memberId != null">
                    member_id = #{recommend.memberId,jdbcType=INTEGER},
                </if>
                <if test="recommend.attractionId != null">
                    attraction_id = #{recommend.attractionId,jdbcType=INTEGER},
                </if>
                <if test="recommend.score != null">
                    score = #{recommend.score,jdbcType=INTEGER},
                </if>
                <if test="recommend.type != null">
                    type = #{recommend.type,jdbcType=INTEGER},
                </if>
                <if test="recommend.recordTime != null">
                    record_time = #{recommend.recordTime,jdbcType=TIMESTAMP},
                </if>
            </set>
            where id = #{recommend.id,jdbcType=INTEGER}
        </foreach>
    </update>
</mapper>